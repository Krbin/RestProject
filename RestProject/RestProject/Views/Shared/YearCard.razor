@using RestProject.Models

@* Add title attribute for accessibility/hover *@
<div class="year-card" @onclick="OnCardClick" title="Browse year @Year">
    @if (PreviewEntry != null && PreviewEntry.IsImage && !string.IsNullOrEmpty(PreviewEntry.ThumbnailUrl))
    {
        <img src="@PreviewEntry.ThumbnailUrl"
             alt="Preview for @Year"
             loading="lazy"
             @onerror="HandleImageError"
             class="@(imageLoadError ? "img-error" : "")" />
        @if (imageLoadError)
        {
            <div class="img-error-overlay">Load Failed</div>
        }
    }
    else
    {
        @* Use the standard placeholder structure from app.css *@
        <div class="card-placeholder">
            <span class="placeholder-icon">📅</span> @* Calendar icon example *@
            <span class="placeholder-text">@Year</span>
        </div>
    }
    @* Use the standard card-info structure from app.css *@
    <div class="card-info">
        <div class="card-title">@Year</div>
        @* Optionally add date of preview entry if desired for context *@
        @* <div class="card-date">@PreviewEntry?.Date</div> *@
    </div>
</div>

@code {
    [Parameter] public int Year { get; set; }
    [Parameter] public ApodEntry PreviewEntry { get; set; }
    [Parameter] public EventCallback<int> OnClickCallback { get; set; }

    private bool imageLoadError = false;

    protected override void OnParametersSet()
    {

        imageLoadError = false;
    }

    private async Task OnCardClick()
    {

        if (OnClickCallback.HasDelegate)
        {
            await OnClickCallback.InvokeAsync(Year);
        }
    }

    private void HandleImageError()
    {
        imageLoadError = true;
        InvokeAsync(StateHasChanged);
        System.Diagnostics.Debug.WriteLine($"Preview image failed to load for year {Year}: {PreviewEntry?.ThumbnailUrl}");
    }
}

@* Style moved to app.css *@